# Generated by Django 5.2 on 2025-05-05 23:49

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Categoria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(blank=True, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Fabricante',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(blank=True, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Local',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(blank=True, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Modelo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(blank=True, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designa que este usuário possui todas as permissões sem atribuí-las explicitamente.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'Já existe um usuário com esse nome de usuário.'}, help_text='Obrigatório. 150 caracteres ou menos. Letras, dígitos e @/./+/-/_ apenas.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designa se o usuário pode fazer login neste site de administração.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designa se este usuário deve ser tratado como ativo. Desmarque isso em vez de excluir contas.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('nome', models.CharField(blank=True, max_length=100, verbose_name='Nome Completo')),
                ('cpf', models.CharField(blank=True, max_length=11, unique=True, validators=[django.core.validators.RegexValidator(message='CPF inválido. Informe os 11 dígitos sem pontos ou traços.', regex='^\\d{11}$')], verbose_name='CPF')),
                ('cargo', models.CharField(blank=True, choices=[('ANALISTA', 'ANALISTA'), ('ASSISTENTE', 'ASSISTENTE'), ('ESPECIALISTA', 'ESPECIALISTA'), ('TÉCNICO', 'TÉCNICO'), ('OPERADOR', 'OPERADOR'), ('AUXILIAR', 'AUXILIAR'), ('ESTAGIÁRIO', 'ESTAGIÁRIO'), ('MOTORISTA', 'MOTORISTA')], max_length=30, verbose_name='Cargo')),
                ('groups', models.ManyToManyField(blank=True, help_text='Os grupos aos quais este usuário pertence. Um usuário receberá todas as permissões concedidas a cada um de seus grupos.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Permissões específicas para este usuário.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Equipamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_serie', models.CharField(max_length=100, unique=True, verbose_name='Número de Série')),
                ('horimetro_atual', models.IntegerField(default=0, verbose_name='Horímetro Atual')),
                ('horimetro_manutencao', models.IntegerField(default=0, verbose_name='Horímetro para Manutenção')),
                ('data_manutencao', models.DateField(blank=True, null=True, verbose_name='Data da Última Manutenção')),
                ('categoria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='equipamentos', to='App.categoria')),
                ('fabricante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='equipamentos', to='App.fabricante')),
                ('modelo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='equipamentos', to='App.modelo')),
                ('colaborador', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='equipamentos', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Atividade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('horimetro_inicial', models.IntegerField(default=0, verbose_name='Horímetro Inicial')),
                ('horimetro_final', models.IntegerField(default=0, verbose_name='Horímetro Final')),
                ('abastecimento', models.IntegerField(default=0, verbose_name='Abastecimento Horímetro')),
                ('litros_abastecidos', models.IntegerField(default=0, verbose_name='Quant de Litros Abastecidos')),
                ('data', models.DateField(blank=True)),
                ('descricao', models.TextField()),
                ('maquina', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='App.equipamento')),
                ('local', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='App.local')),
                ('colaborador', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
